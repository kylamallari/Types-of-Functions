// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts@4.9.0/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts@4.9.0/access/Ownable.sol";

contract NewToken is ERC20, Ownable {
    constructor(uint256 initialSupply) ERC20("KYLA", "KYL") {
        require(initialSupply > 0, "Initial supply must be greater than 0");
        mintTokens(msg.sender, 10 * initialSupply);
    }

    function mintTokens(address to, uint256 amount) public onlyOwner {
        require(to != address(0), "Invalid recipient address");
        require(amount > 0, "Minted amount must be greater than 0");
        _mint(to, amount);
    }

    function transferTokensTo(address to, uint256 amount) public {
        require(to != address(0), "Invalid recipient address");
        require(amount > 0, "Transfer amount must be greater than 0");
        _transfer(msg.sender, to, amount);
    }

    function burnTokens(uint256 amount) public {
        require(amount > 0, "Burn amount must be greater than 0");
        _burn(msg.sender, amount);
    }
}
